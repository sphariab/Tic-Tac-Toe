{"version":3,"sources":["styles/startStyles.js","components/Start.js","components/helpers/cells.js","components/helpers/winningCombinations.js","components/helpers/getResult.js","styles/gameStyles.js","components/Game.js","styles/finishStyles.js","components/Finish.js","App.js","index.js"],"names":["styles","theme","gameWrapper","display","alignItems","justifyContent","flexDirection","fontFamily","buttonsWrapper","pushUser","props","player","history","push","pathname","state","withStyles","className","classes","Button","onClick","cells","arr","i","map","number","selected","winningResults","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","getResult","resultCell","winningCombinaton","winningCombinations","filter","item1","indexOf","length","gameContainer","gridTemplateRows","gridTemplateColumns","cell","border","cursor","borderRadius","minWidth","color","restartButton","backgroundColor","width","height","marginTop","Game","showAllResult","setResult","userCells","computerCells","goToResultPage","userResult","computerResult","restartGame","setState","chooseRandomCell","container","concat","diffArray","item","Math","floor","random","computerPlay","cellsCopy","selectedCellNumber","fillResult","renderIcon","this","location","result","index","key","disabled","Component","fontSize","textTransform","userBlock","marginBottom","textAlign","App","exact","path","component","Start","Finish","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5caeec80.chunk.js","sourcesContent":["const styles = theme => ({\n  gameWrapper:{\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    fontFamily: \"Helvetica\",\n  },\n  buttonsWrapper: {\n    display: \"flex\"\n  }\n})\n\nexport default styles","import React from 'react'\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PanoramaFishEyeIcon from '@material-ui/icons/PanoramaFishEye';\nimport styles from '../styles/startStyles';\n\nconst pushUser = (props, player) => {\n  props.history.push({\n    pathname: '/game',\n    state: { player: player }\n  })\n}\n\nfunction Start (props) {\n  return (\n    <div className={props.classes.gameWrapper}>\n      <h1>Choose your fighter</h1>\n      <div className={props.classes.buttonsWrapper}>\n        <Button\n          onClick={() => pushUser(props, 'x')}>\n          <CloseIcon/>\n        </Button>\n        <Button\n          onClick={() => pushUser(props, 'o')}>\n          <PanoramaFishEyeIcon />\n        </Button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Start)","const cells = () => {\n  let arr = []\n  for (let i = 0; i <= 24; i++) {\n    arr.push(i)\n  }\n  let cellsCopy = arr.map(number => {\n    return {number: number, selected: false, player: ''}\n  })\n  return cellsCopy\n}\n\nexport default cells","const winningResults = {\n  0: [1, 2, 3, 4],\n  1: [0, 1, 2, 3],\n  2: [0, 5, 10, 15],\n  3: [1, 6, 11, 16],\n  4: [6, 11, 16, 21],\n  5: [2, 7,12, 17],\n  6: [7, 12, 17, 22],\n  7: [3, 8, 13, 18],\n  8: [8, 13, 18, 23],\n  9: [4, 9, 14, 19],\n  10: [9, 14, 19, 24],\n  11: [5, 6, 7, 8],\n  12: [10, 11, 12, 13],\n  13: [6, 7, 8, 9],\n  14: [11, 12, 13, 14],\n  15: [15, 16, 17, 18],\n  16: [16, 17, 18, 19],\n  17: [20, 21, 22, 23],\n  18: [21, 22, 23, 24],\n  19: [1, 7, 13, 19],\n  20: [6, 12, 18, 24],\n  21: [5, 11, 17, 23],\n  22: [15, 11, 7, 3],\n  23: [20, 16, 12, 8],\n  24: [16, 12, 8, 4],\n  25: [21, 17, 13, 9],\n  26: [0, 6, 12, 18],\n  27: [6, 12, 18, 24]\n}\n\nexport default winningResults\n","import winningCombinations from './winningCombinations';\n\nconst getResult = (resultCell) => {\n  let winningCombinaton, difference, result;\n  for (let i = 0; i <= 27; i++) {\n    difference = winningCombinations[i].filter(item1 => resultCell.indexOf(item1) === -1)\n    if (difference.length === 0) {\n      winningCombinaton = winningCombinations[i]\n    }\n  }\n  winningCombinaton ? result = 'win' : result = 'lost'\n  return result\n}\n\nexport default getResult\n\n","const styles = theme => ({\n  gameContainer: {\n    display: \"grid\",\n    gridTemplateRows: \"50px 50px 50px 50px 50px;\",\n    gridTemplateColumns: \"50px 50px 50px 50px 50px\",\n  },\n  cell: {\n    border: \"1px solid red\",\n    cursor: \"pointer\",\n    borderRadius: 0,\n    minWidth: \"inherit\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  gameWrapper:{\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    fontFamily: \"Helvetica\",\n  },\n  restartButton: {\n    backgroundColor: \"#07DC72\",\n    borderRadius: \"50%\",\n    width: 100,\n    height: 100,\n    marginTop: 30,\n  }\n})\n\nexport default styles","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport cells from './helpers/cells';\nimport getResult from './helpers/getResult'\nimport styles from '../styles/gameStyles';\nimport { Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PanoramaFishEyeIcon from '@material-ui/icons/PanoramaFishEye';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      cells: cells(),\n      userCells: [],\n      computerCells: [],\n      userResult: '',\n      computerResult: '',\n      player: '',\n    }\n  }\n\n  componentDidMount(){\n    this.setState({ player: this.props.history.location.state.player })\n  }\n\n  setResult (result, player) {\n    player === 'user' ?\n      this.setState({ userResult: result }, () => this.goToResultPage())\n      : this.setState({ computerResult: result }, () => this.goToResultPage())\n  }\n\n  showAllResult = () => {\n    this.setResult(getResult(this.state.userCells),  'user')\n    this.setResult(getResult(this.state.computerCells), 'computer')\n  }\n\n\n  goToResultPage = () => {\n    let userResult = this.state.userResult\n    let computerResult = this.state.computerResult\n    this.props.history.push({\n      pathname: '/finish',\n      state: {userResult, computerResult}\n    })\n  }\n\n  restartGame = () => {\n    this.setState({\n      userCells: [],\n      computerCells: [],\n      userResult: '',\n      computerResult: ''\n    })\n\n    this.props.history.push({\n      pathname: '/',\n    })\n  }\n\n  chooseRandomCell = () => {\n    let userCells = this.state.userCells;\n    let computerCells = this.state.computerCells;\n    let container = [].concat(userCells, computerCells);\n    let arr = cells()\n    let diffArray = arr.filter(item => container.indexOf(item.number) === -1);\n    const randomElement = diffArray[Math.floor(Math.random() * diffArray.length)];\n    return randomElement.number\n  }\n\n  computerPlay = () => {\n    let computerCells = this.state.computerCells;\n    let cellsCopy = this.state.cells;\n    if (computerCells.length <= 3 ) {\n      let selectedCellNumber = this.chooseRandomCell();\n\n      cellsCopy = cellsCopy.map(item => {\n        if (item.number === selectedCellNumber) {\n          item.selected = true;\n          item.player = 'computer';\n        }\n        return item\n      })\n\n      computerCells = computerCells.concat([selectedCellNumber]);\n\n      this.setState({computerCells: computerCells, cells: cellsCopy}, () => {\n        if (computerCells.length === 4 ) {\n          this.showAllResult()\n        }\n      })\n    } else {\n      this.showAllResult()\n    }\n  }\n\n  fillResult = (cell) => {\n    let userCells = this.state.userCells\n    let cellsCopy = this.state.cells\n\n    cellsCopy = cellsCopy.map(item => {\n      if (item.number === cell.number) {\n        item.selected = true;\n        item.player = 'user';\n      }\n      return item\n    })\n\n    if (userCells.length <= 3 ) {\n      userCells = userCells.concat([cell.number]);\n\n      this.setState({userCells: userCells, cells: cellsCopy}, () => {\n        if (userCells.length === 4 ) {\n          this.showAllResult()\n        }\n        this.computerPlay()\n      })\n    } else {\n      this.showAllResult()\n      this.computerPlay()\n    }\n  };\n\n  renderIcon = (cell, player) => {\n    return cell.player === 'user' && player === 'x' && cell.selected ? <CloseIcon /> :\n      cell.player === 'user' && player === 'o' && cell.selected ?  <PanoramaFishEyeIcon /> :\n      cell.player === 'computer' && player === 'x' && cell.selected ? <PanoramaFishEyeIcon /> :\n      cell.player === 'computer' && player === 'o' && cell.selected ? <CloseIcon /> : null\n   };\n\n  render () {\n    const { cells, player } = this.state\n    const { classes } = this.props\n\n    return (\n      <section className={classes.gameWrapper}>\n        <h1>Tic-Tac-Toe</h1>\n        <div className={classes.gameContainer}>\n          {cells.map((cell, index) =>\n            <Button\n              key={index}\n              className={classes.cell}\n              disabled={cell.selected}\n              onClick={() => {\n                this.fillResult(cell)\n              }}\n            >\n              {this.renderIcon(cell, player)}\n            </Button>\n          )}\n        </div>\n        <Button\n          className={classes.restartButton}\n          onClick={this.restartGame}\n        >\n          Restart Game\n        </Button>\n      </section>\n    )\n  }\n}\n\nexport default withStyles(styles)(Game)\n\n\n","const styles = theme => ({\n  gameContainer:{\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    fontFamily: \"Helvetica\",\n  },\n  result: {\n    fontSize: 24,\n    textTransform: \"uppercase\",\n  },\n  userBlock: {\n    marginBottom: 50,\n    textAlign: \"center\",\n  },\n  restartButton: {\n    backgroundColor: \"#07DC72\",\n    borderRadius: \"50%\",\n    width: 100,\n    height: 100,\n    marginTop: 30,\n  }\n})\n\nexport default styles","import React from 'react'\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../styles/finishStyles'\n\nfunction Finish ({history, classes }) {\n  const goBack = () =>{\n    history.push({\n      pathname: '/',\n    })\n  }\n  return (\n    <div className={classes.gameContainer}>\n      <h1>Game over!</h1>\n      <div className={classes.userBlock}>\n        <div>You</div>\n        <div className={classes.result}>{history.location.state.userResult}</div>\n      </div>\n      <div>computer {history.location.state.computerResult}</div>\n      <Button\n        className={classes.restartButton}\n        onClick={goBack}>\n        Restart Game\n      </Button>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Finish)\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Start from './components/Start';\nimport Game from './components/Game';\nimport Finish from './components/Finish';\n\nfunction App() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Start} />\n            <Route exact path=\"/game\" component={Game} />\n            <Route exact path=\"/finish\" component={Finish} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}